// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PesquisaSatisfacao.API.Data;

#nullable disable

namespace PesquisaSatisfacao.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Opcoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<int>("PesquisaId")
                        .HasColumnType("integer");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PesquisaId");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Pesquisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LinkUnico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pesquisas");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("integer");

                    b.Property<int>("PesquisaId")
                        .HasColumnType("integer");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PerguntaId");

                    b.HasIndex("PesquisaId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Pergunta", b =>
                {
                    b.HasOne("PesquisaSatisfacao.API.Models.Pesquisa", "Pesquisa")
                        .WithMany("Perguntas")
                        .HasForeignKey("PesquisaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pesquisa");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Resposta", b =>
                {
                    b.HasOne("PesquisaSatisfacao.API.Models.Cliente", "Cliente")
                        .WithMany("Respostas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("PesquisaSatisfacao.API.Models.Pergunta", "Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PesquisaSatisfacao.API.Models.Pesquisa", "Pesquisa")
                        .WithMany("Respostas")
                        .HasForeignKey("PesquisaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pergunta");

                    b.Navigation("Pesquisa");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Cliente", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Pergunta", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("PesquisaSatisfacao.API.Models.Pesquisa", b =>
                {
                    b.Navigation("Perguntas");

                    b.Navigation("Respostas");
                });
#pragma warning restore 612, 618
        }
    }
}
